<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAA
        AHkAAADnAAAA5wAAAHoAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAYAAACmAAAA/wAAAP8AAAD/AAAA/wAAAK4AAAAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAQAAAAwAAAAP8AAAD/AAAA8AAAAPEAAAD/AAAA/wAAAMEAAAARAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAGgAAAM8AAAD/AAAA/wAAAOYAAAAwAAAALAAAAOMAAAD/AAAA/wAAANUAAAAeAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAACsAAADhAAAA/wAAAP8AAADVAAAAHgAAAAAAAAAAAAAAGwAAANEAAAD/AAAA/wAA
        AOYAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABAAAAA7wAAAP8AAAD/AAAAxgAAABQAAAAAAAAAAAAAAAAAAAAAAAAAEQAA
        AMEAAAD/AAAA/wAAAPMAAABHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAUgAAAPcAAAD/AAAA/wAAAK4AAAAJAAAAAAAAAAAAAAAtAAAALQAA
        AAAAAAAAAAAABwAAAKgAAAD/AAAA/wAAAPkAAABaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG8AAAD9AAAA/wAAAP8AAACRAAAAAgAAAAAAAAAAAAAALgAA
        AP0AAAD9AAAALgAAAAAAAAAAAAAAAQAAAIoAAAD/AAAA/wAAAP4AAACAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAACIAAAA/wAAAP8AAAD+AAAAgAAAAAAAAAAAAAAAAAAA
        AAAAAABZAAAA/wAAAP8AAABaAAAAAAAAAAAAAAAAAAAAAAAAAG8AAAD9AAAA/wAAAP8AAACRAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAApwAAAP8AAAD/AAAA+QAAAFoAAAAAAAAAAAAA
        AAAAAAAEAAAAigAAAPUAAAD/AAAA/wAAAPUAAACJAAAAAwAAAAAAAAAAAAAAAAAAAFQAAAD3AAAA/wAA
        AP8AAACuAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAMAAAAD/AAAA/wAAAPMAAABHAAAAAAAA
        AAAAAAAAAAAAAAAAAKMAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACiAAAAAAAAAAAAAAAAAAAAAAAA
        AEEAAADwAAAA/wAAAP8AAADGAAAAEwAAAAAAAAAAAAAAAAAAAA8AAADSAAAA/wAAAP8AAADkAAAALgAA
        AAAAAAAAAAAAAAAAAAAAAAA8AAAA/wAAAP8AAADoAAAAcgAAAHIAAADoAAAA/wAAAP8AAAA8AAAAAAAA
        AAAAAAAAAAAAAAAAAC4AAADkAAAA/wAAAP8AAADSAAAADwAAAAAAAAAAAAAAfgAAAP8AAAD/AAAA1AAA
        AB0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIYAAAD/AAAA/wAAAD4AAAAAAAAAAAAAAD4AAAD/AAAA/wAA
        AIYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0AAADUAAAA/wAAAP8AAAB9AAAAAAAAAAAAAACfAAAA/wAA
        AP8AAAC7AAAAqgAAAI8AAAArAAAAAAAAAAAAAAAAAAAAmwAAAP8AAADzAAAAAwAAAAAAAAAAAAAADgAA
        AP8AAAD/AAAAogAAAAAAAAAAAAAAAAAAACsAAACPAAAAqgAAALsAAAD/AAAA/wAAAJ4AAAAAAAAAAAAA
        AFoAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPYAAAArAAAAAAAAAAAAAAAhAAAAnAAAAFEAAAAAAAAAAAAA
        AAAAAABxAAAA/wAAAP8AAAB+AAAAAAAAAAAAAAArAAAA9gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAWgAA
        AAAAAAAAAAAAAQAAAH0AAADsAAAA/wAAAP8AAAD/AAAA/wAAAJEAAAAAAAAAAAAAAAAAAAAAAAAACQAA
        AGMAAACdAAAAxQAAAP8AAAD/AAAA+QAAACIAAAAAAAAAAAAAAJAAAAD/AAAA/wAAAP8AAAD/AAAA7AAA
        AH0AAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP4AAAD/AAAAqwAAAAAAAAAAAAAAAAAA
        ACkAAADdAAAA/wAAAP8AAAD/AAAA/wAAAP0AAABkAAAAAAAAAAAAAAAAAAAAqQAAAP8AAAD/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/gAAAP8AAACrAAAAAAAA
        AAAAAAAJAAAA3QAAAP8AAAD/AAAA/wAAAPQAAAC7AAAAQAAAAAAAAAAAAAAAAAAAAAAAAACpAAAA/wAA
        AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD+AAAA/wAA
        AKsAAAAAAAAAAAAAAGQAAAD/AAAA/wAAALcAAAAeAAAAAAAAAAAAAAAVAAAARAAAAAMAAAAAAAAAAAAA
        AKkAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AP4AAAD/AAAAqwAAAAAAAAAAAAAAnQAAAP8AAAD/AAAAHQAAAAAAAAAAAAAAAAAAANYAAAD/AAAAgQAA
        AAAAAAAAAAAAqQAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAA/gAAAP8AAACrAAAAAAAAAAAAAACVAAAA/wAAAP8AAAAdAAAAAAAAAAAAAAAcAAAA/wAA
        AP8AAACVAAAAAAAAAAAAAACpAAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAD+AAAA/wAAAKsAAAAAAAAAAAAAAGAAAAD/AAAA/wAAALUAAAAbAAAAHAAA
        ALUAAAD/AAAA/wAAAF8AAAAAAAAAAAAAAKkAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP4AAAD/AAAAqwAAAAAAAAAAAAAABgAAANsAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADbAAAABgAAAAAAAAAAAAAAqQAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/gAAAP8AAACrAAAAAAAAAAAAAAAAAAAAIgAA
        ANsAAAD/AAAA/wAAAP8AAAD/AAAA2wAAACIAAAAAAAAAAAAAAAAAAACpAAAA/wAAAP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD+AAAA/wAAAKsAAAAAAAAAAAAA
        AAAAAAAAAAAABgAAAIoAAAD/AAAA/wAAAIoAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAKkAAAD/AAAA/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP4AAAD/AAAAqwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAASAAAAP8AAAD/AAAASQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqQAA
        AP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/gAA
        AP8AAACrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAhAAAAIMAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACpAAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD+AAAA/wAAAKsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAKkAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAP4AAAD/AAAAqwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAqQAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA8wAAAP8AAADjAAAAqgAAAKoAAACqAAAAqgAAAKoAAACqAAAAqgAA
        AKoAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAADiAAAA/wAAAPMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAqgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUAAACsAAAA9AAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA9AAAAKwAAAAUAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//gf///wD///4Af//8AD//+Bgf//A8D//gZgf/wMMD/wPDwP4HAOB8Dw
        DwOB4AeBg+GHwYDhhwGAY4YBgHgGAfxwDj/8YB4//GDGP/xhxj/8YYY//GAGP/xgBj/8cA4//HgeP/x8
        Pj/8fD4//H/+P/x//j/8AAA//AAAP/wAAD8=
</value>
  </data>
</root>